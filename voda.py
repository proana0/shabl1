import requests,json,random,string,termcolor,time,pyfiglet
from bs4 import BeautifulSoup
# -----------------------------------

logo = pyfiglet.figlet_format('Ahmed Ramzy')
descr = """
 By: Ahmed Ramzy
 Facebook: AhmedRamzy.me
 """
print(termcolor.colored(logo, color="red"), termcolor.colored(descr, color="green"))
print('-' * 50)

number = "01050809324".strip()
pwd = "A12345a@".strip()
with requests.Session() as req:
    def generationLink(stringLingth):
        latters = string.ascii_lowercase
        return ''.join(random.choice(latters) for i in range(stringLingth))
    urlLoginPage = f'https://web.vodafone.com.eg/auth/realms/vf-realm/protocol/openid-connect/auth?client_id=website&redirect_uri=https%3A%2F%2Fweb.vodafone.com.eg%2Far%2FKClogin&state=286d1217-db14-4846-86c1-9539beea01ed&response_mode=query&response_type=code&scope=openid&nonce={generationLink(10)}&kc_locale=en'
    responsePageLogin = req.get(urlLoginPage)
    soup = BeautifulSoup(responsePageLogin.content, 'html.parser')
    getUrlAction = soup.find('form').get('action')
    # print(getUrlAction)
    # ---------------------------------------------------
    # [1] Send data to the login page
    headerRequest = {
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
    'Accept-Encoding': 'gzip, deflate, br',
    'Accept-Language': 'en-GB,en;q=0.9,ar;q=0.8,ar-EG;q=0.7,en-US;q=0.6',
    'Connection': 'keep-alive',
    'Content-Type': 'application/x-www-form-urlencoded',
    'Host': 'web.vodafone.com.eg',
    'Origin': 'https://web.vodafone.com.eg',
    'Referer': urlLoginPage,
    'Sec-Fetch-Dest': 'document',
    'Sec-Fetch-Mode': 'navigate',
    'Sec-Fetch-Site': 'same-origin',
    'Sec-Fetch-User': '?1',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36'
    }
    formData = {
    'username':number,
    'password':pwd
    }
    sendUserData = req.post(getUrlAction,headers=headerRequest,data=formData)
    checkRegistry = sendUserData.url
    _checkRegistry = checkRegistry.find('KClogin')
    # [2] Check the registry
    if _checkRegistry != -1:
        code = checkRegistry
        _code = code[code.index('code=') + 5:]
        headerAccessToken = {
        'Accept': '*/*',
        'Accept-Encoding': 'gzip, deflate, br',
        'Accept-Language': 'en-GB,en;q=0.9,ar;q=0.8,ar-EG;q=0.7,en-US;q=0.6',
        'Connection': 'keep-alive',
        'Content-type': 'application/x-www-form-urlencoded',
        'Host': 'web.vodafone.com.eg',
        'Origin': 'https://web.vodafone.com.eg',
        'Referer': 'https://web.vodafone.com.eg/ar/KClogin',
        'Sec-Fetch-Dest': 'empty',
        'Sec-Fetch-Mode': 'cors',
        'Sec-Fetch-Site': 'same-origin',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36'
        }
        formDataAccessToken = {
        'code': _code,
        'grant_type': 'authorization_code',
        'client_id': 'website',
        'redirect_uri': 'https://web.vodafone.com.eg/ar/KClogin'
        }
        sendDataAccessToken = req.post('https://web.vodafone.com.eg/auth/realms/vf-realm/protocol/openid-connect/token',headers=headerAccessToken,data=formDataAccessToken)
        access_token = sendDataAccessToken.json()['access_token']
        # print(access_token)
        #--------------------------------------------------------
                  
       

        # ###################################################
        def MI_LFC_Upgrade_PayDiff():
            url = "https://web.vodafone.com.eg/services/dxl/pom/productOrder"    
            header = {
            'Host': 'web.vodafone.com.eg',
            'Connection': 'keep-alive',
            'Accept': 'application/json',
            'Authorization': f'Bearer {access_token}',
            'msisdn': number,
            'Accept-Language': 'EN',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36',
            'Content-Type': 'application/json',
            'Origin': 'https://web.vodafone.com.eg',
            'Referer': 'https://web.vodafone.com.eg/spa/miManagement',
            'Accept-Encoding': 'gzip, deflate, br'
            }
            jsonData = {"channel":{"name":"MobileApp"},"orderItem":[{"action":"add","product":{"characteristic":[{"name":"ExecutionType","value":"Sync"},{"name":"LangId","value":"en"}],"relatedParty":[{"id":f"{number}","name":"MSISDN","role":"Subscriber"}],"id":"120","@type":"MI"}}],"@type":"MIProfile"}
            sendReq = req.post(url,headers=header,data=json.dumps(jsonData))
            res = sendReq.json()['state']
            print(res) 
    
        ######################################################################################
        def MI_LFC_Upgrade_PayDiff_SuperPass():
            url = "https://web.vodafone.com.eg/services/dxl/pom/productOrder"    
            header = {
            'Host': 'web.vodafone.com.eg',
            'Connection': 'keep-alive',
            'Accept': 'application/json',
            'Authorization': f'Bearer {access_token}',
            'msisdn': number,
            'Accept-Language': 'EN',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36',
            'Content-Type': 'application/json',
            'Origin': 'https://web.vodafone.com.eg',
            'Referer': 'https://web.vodafone.com.eg/spa/miManagement',
            'Accept-Encoding': 'gzip, deflate, br'
            }
            jsonData = {"channel":{"name":"MobileApp"},"orderItem":[{"action":"delete","product":{"characteristic":[{"name":"ExecutionType","value":"Sync"},{"name":"LangId","value":"en"}],"relatedParty":[{"id":f"{number}","name":"MSISDN","role":"Subscriber"}],"id":"120","@type":"MI"}}],"@type":"MIProfile"}
            sendReq = req.post(url,headers=header,data=json.dumps(jsonData))
            res = sendReq.json()['state']
            print(res)

#        def new2020():
        #    url = 'https://web.vodafone.com.eg/services/dxl/pom/productOrder'
   #         header = {
  #          'Accept': 'application/json',
  ##########
   #         'Accept-Language': 'AR',
  #          'Authorization': f'Bearer {access_token}',
    #        'Content-Type': 'application/json',
   #         'msisdn': number,
  #          'Referer': 'https://web.vodafone.com.eg/spa/miManagement',
  #          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36'
   #         }
  ###
#           pay = {"channel":{"name":"MobileApp"},"orderItem":[{"action":"add",
            ##"product":{"characteristic":[{"name":"ExecutionType","value":"Sync"},
  ##          {"name":"LangId","value":"en"}],"relatedParty":[{"id":f"{number}",
    ##        "name":"MSISDN","role":"Subscriber"}],"id":"120","@type":"MI"}}],
    #        "@type":"MIProfile"}
  #          sendRequest = req.post(url, headers=header,data=json.dumps(pay))
    #        res = sendRequest.json()['state']
    #        print(res)
         ##########
        print("-"*50)        
        print("Remove [1]")
        print("Add [2]")
        print("-"*50)
        while True:
            outPut = input("choice: ").strip()
            if outPut == '1' or outPut == 1:
                print("-"*50)
                MI_LFC_Upgrade_PayDiff_SuperPass()
            elif outPut == 2 or outPut == '2':
                print("-"*50)    
                MI_LFC_Upgrade_PayDiff()
            elif outPut == 3 or outPut == '3':
                print("-"*50)
                q = input("Automatic renewal [y:n]: ").strip()
                if q == 'y':
                    numberMinutes = int(input("Please specify a renewal time: "))
                    countTime = numberMinutes * 60.0
                    startTime = time.time()
                    while True:
                        time.sleep(float(countTime) - (time.time() - startTime) % 60.0)    
                        new2020()
                else:
                    new2020()        
            elif outPut != '1' or outPut != 1 or outPut != '2' or outPut == 2 or outPut != 3 or outPut != '3':
                exit()    
            else:
                print("Error choice")
